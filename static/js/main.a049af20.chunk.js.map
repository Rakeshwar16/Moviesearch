{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","movieinfo","setMovieinfo","title","setTitle","getMovieData","url","fetch","then","response","json","movie","console","log","catch","err","useEffect","className","type","placeholder","onChange","event","value","target","onClick","undefined","Error","src","Poster","alt","Title","Genre","Plot","Actors","BoxOffice","Director","Language","Released","Runtime","Ratings","map","rating","index","Source","Value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA6FeA,MAzFf,WAEA,MAA6BC,mBAAS,MAAtC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAqBF,mBAAS,4BAA9B,mBAAKG,EAAL,KAAWC,EAAX,KAUA,SAASC,IACP,IAAIC,EAAI,0BAAD,OAA2BH,EAA3B,oBAEPI,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZT,EAAaS,MAEdG,OAAM,SAACC,GACNH,QAAQC,IAAIE,MAId,OAtBFC,qBAAU,WACPX,MACD,IAqBE,qBAAKY,UAAU,MAAf,SAEE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UAEE,8CACA,sBAAKA,UAAU,cAAf,UACE,uBAAOC,KAAO,OAAOC,YAAc,qBAAqBC,SAAU,SAACC,GA1B/E,IAAmBC,IA0B+ED,EAAME,OAAOD,MAzB7GlB,EAASkB,IAyB6GL,UAAY,iBACxH,wBAAQA,UAAU,MAAMO,QAASnB,EAAjC,kCAGmBoB,KAAV,OAATxB,QAAS,IAATA,OAAA,EAAAA,EAAWyB,OAEX,sBAAKT,UAAU,QAAf,UACA,qBAAKA,UAAU,SAAf,SACE,qBAAKU,IAAG,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAW2B,OAAQC,IAAI,SAASZ,UAAU,iBAEtD,qBAAKA,UAAU,SAAf,SACG,sBAAKA,UAAU,UAAf,UACE,oCAAKhB,QAAL,IAAKA,OAAL,EAAKA,EAAW6B,QAChB,8BAAG,4CAAH,aAA8B7B,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAW8B,SACzC,8BAAG,2CAAH,aAA6B9B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAW+B,QACxC,8BAAG,2CAAH,aAA6B/B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAWgC,UACxC,8BAAG,iDAAH,aAAmChC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAWiC,aAC9C,8BAAG,kDAAH,aAAoCjC,QAApC,IAAoCA,OAApC,EAAoCA,EAAWkC,YAC/C,8BAAG,+CAAH,aAAiClC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAWmC,YAC5C,8BAAG,oDAAH,aAAsCnC,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAWoC,YACjD,8BAAG,8CAAH,aAAgCpC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAWqC,WAE3C,qBAAKrB,UAAU,UAAf,gBAGKhB,QAHL,IAGKA,OAHL,EAGKA,EAAWsC,QAAQC,KAAI,SAACC,EAAOC,GAAR,OAErB,gCACA,iCAASD,EAAOE,SAChB,6BAAKF,EAAOG,UAFFF,gBAiBpB,yDCvECG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a049af20.chunk.js","sourcesContent":["import { useState,useEffect } from 'react';\nimport './App.css';\n\n\nfunction App() {\n\nlet [movieinfo,setMovieinfo]=useState(null);\nlet [title,setTitle]=useState(\"how to train your dragon\");\n\nuseEffect(()=>{\n   getMovieData();\n},[])\n\nfunction readTitle(value) {\n  setTitle(value);\n}\n\nfunction getMovieData() {\n  let url=`https://omdbapi.com/?t=${title}&apikey=73dd9dff`;\n\n  fetch(url)\n  .then((response)=>response.json())\n  .then((movie) =>{\n    console.log(movie);\n    setMovieinfo(movie);\n  })\n  .catch((err)=>{\n    console.log(err);\n  })\n}\n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"container\">\n        <div className=\"padd\">\n\n          <h1>Movie Search</h1>\n          <div className=\"input-group\">\n            <input type = \"text\" placeholder = \"Enter a Movie Name\" onChange={(event)=>{readTitle(event.target.value)}} className = \"movie-search\"  />\n            <button className=\"btn\" onClick={getMovieData}>Search Movie</button>\n          </div>\n          {\n            movieinfo?.Error===undefined?(\n\n            <div className=\"movie\">\n            <div className=\"poster\">\n              <img src={movieinfo?.Poster} alt=\"poster\" className=\"img-poster\"/>\n            </div>\n            <div className=\"detail\">\n               <div className=\"padding\">\n                 <h1>{movieinfo?.Title}</h1>\n                 <p><strong>Genre </strong> : {movieinfo?.Genre}</p>\n                 <p><strong>Plot </strong> : {movieinfo?.Plot}</p>\n                 <p><strong> Cast</strong> : {movieinfo?.Actors}</p>\n                 <p><strong> Box Office</strong> : {movieinfo?.BoxOffice}</p>\n                 <p><strong>Directed By </strong> : {movieinfo?.Director}</p>\n                 <p><strong> Language</strong> : {movieinfo?.Language}</p>\n                 <p><strong>Released Date </strong> : {movieinfo?.Released}</p>\n                 <p><strong>Runtime </strong> : {movieinfo?.Runtime}</p>\n\n                 <div className=\"ratings\">\n\n                   {\n                      movieinfo?.Ratings.map((rating,index)=>(\n\n                        <div key={index}>\n                        <strong>{rating.Source}</strong>\n                        <h3>{rating.Value}</h3>\n                      </div>\n\n                      ))\n\n                   }\n                   \n\n                 </div>\n               </div>\n            </div>\n\n           </div>\n            ):\n            (\n              <h1>Movie Not Found</h1>\n            )\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}